const {
    MessageEmbed,
    Message,
    Client
} = require("discord.js");
const { readdirSync } = require("fs");
const {
    button_pagination
} = require('../../utils/button');

module.exports = {
    name: "help",
    category: "Information",
    aliases: [ "h" ],
    description: "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–∞–Ω–¥",
    args: false,
    usage: "",
    permission: [],
    owner: false,
   execute: async (message, args, client, prefix) => {
       
        let cots = [];
        let cots2 = [];
        if (!args[0]) {

            //categories to ignore
            let ignored = [
                "Owner"
            ];

            const emo = {
                config: "‚öôÔ∏è",
                information: "‚ÑπÔ∏è",
                music: "üéµ",
                
            }

            readdirSync('./commands').map(async (dir) => {
                const commands = readdirSync(`./commands/${dir}/`).filter((file) =>
                    file.endsWith(".js")
                );

                let cmds = commands.map(e => {
                    let obyy = new Object();

                    e = e.replace('.js', '');

                    obyy = {
                        name: `\`${e}\``,
                        value: `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`${prefix}${e}\``,
                        inline: true
                    }

                    return obyy
                })

                let uwu = {
                    dir,
                    cmdd: cmds
                }

                cots2.push(uwu);
            });

            let embeds = [];

            cots2.forEach(cot => {

                const embed = new MessageEmbed()
                    .setTitle(`${cot.dir.charAt(0).toUpperCase() + cot.dir.slice(1)} –ö–æ–º–∞–Ω–¥–∞!`)
                    .setDescription(`–ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ \`${prefix}help\` –∏ –≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥—ã –≤ –±–æ—Ç–µ.\n–ü—Ä–∏–º–µ—Ä: \`${prefix}help ping\`.\n\n`)
                    .setColor(client.embedColor)

                cot.cmdd.forEach(ecmdd => {
                    embed.addFields(ecmdd)
                })

                embeds.push(embed);
            });

            await button_pagination(message, embeds);

        } else {

            const command =
                client.commands.get(args[0].toLowerCase()) ||
                client.commands.find(
                    (c) => c.aliases && c.aliases.includes(args[0].toLowerCase())
                );


            if (!command) {
                const embed = new MessageEmbed()
                    .setTitle(`–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ \`${prefix}help\` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥!`)
                    .setColor("RED");
                return await client.sendEmbed(embed);
            }

            const embed = new MessageEmbed()
                .setTitle("–ö–æ–º–∞–Ω–¥–∞ –∏ –µ—ë –¥–µ—Ç–∞–ª–∏:")
                .addField(
                    "–ö–æ–º–∞–Ω–¥–∞:",
                    command.name ? `\`${command.name}\`` : "–ù–µ –æ–ø–æ–∑–Ω–æ–Ω–æ."
                )
                .addField(
                    "–ê–¥–∏–∞—Å(—ã):",
                    command.aliases ?
                    `\`${command.aliases.join("` `")}\`` :
                    "–í—Ç–æ—Ä–∏—á–Ω—ã–µ –Ω–µ –æ–ø–æ–∑–Ω–∞–Ω—ã."
                )
                .addField(
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:",
                    command.usage ?
                    `\`${prefix}${command.name} ${command.usage}\`` :
                    `\`${prefix}${command.name}\``
                )
                .addField(
                    "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
                    command.description ?
                    command.description :
                    "–ù–µ –Ω–∞–π–¥–µ–Ω–æ."
                )
                .setFooter(
                    `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª ${message.member.displayName}`,
                    message.author.displayAvatarURL({
                        dynamic: true
                    })
                )
                .setTimestamp()
                .setColor(client.embedColor);
            return await message.channel.send({embeds: [embed]});
        }
    },
};
